openapi: 3.0.1
info:
  title: Account Aggregator API
  description: "# Summary\n\n  The Account Aggregator (AA) serves as an intermediary\
    \ between Financial Information Providers (such as banks, securities, insurance,\
    \ pensions and other account/finance management service providers) and Financial\
    \ Information Users. This Application Programming Interface enables AA to manage\
    \ the lifecycle of consent artefacts, mediates the secure flow of financial information\
    \ from FIPs to FIUs based on explicit user consent and exposes Notification method\
    \ so that FIU and FIP can notify it about the events generated during consent\
    \ flow and data flow. All consent necessarily have to be generated directly on\
    \ application provided by AA. \n  \n\n---"
  contact:
    email: aa-api@rebit.org.in
  version: 1.1.3
  x-custom-tags:
    x-api-name: Account Aggregator (AA) API
servers:
- url: https://aa-sandbox.setu.co/
security:
- Client_api_key: []
tags:
- name: Consent Flow
  description: Consent Management APIs
- name: Data Flow
  description: APIs for aggregation of FI
- name: Notifications
  description: This API is used by the FIPs and FIUs to submit notifications to the
    AA.
- name: Monitoring
  description: Monitoring API Interface for checking availability of AA.
paths:
  /Consent:
    post:
      tags:
      - Consent Flow
      description: "This API is intended for AA Client to request generation of digitally\
        \ signed consent artefacts. The customer has to use the AA application to\
        \ select accounts and approve consent generation. Once the customer approves\
        \ the consent request on the AA application, AA generates the digitally signed\
        \ consent artefacts. Note - The AA Client never sees the account of the customer\
        \ or directly participates in consent generation.  \n\n<br>Note: \"Request\
        \ Body Example Value\" and \"Responses Example Value\" given below is for\
        \ illustrative purposes only."
      parameters:
      - name: x-jws-signature
        in: header
        description: Detached JWS of the body
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentsRequest'
        required: true
      responses:
        200:
          description: OK
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentsResponse'
        400:
          description: Bad Request
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestConsent'
        401:
          description: Unauthorized Access
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccess'
        404:
          description: Not Found
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        409:
          description: Conflict
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        412:
          description: Precondition failed
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        500:
          description: Internal Server Error
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        501:
          description: Not Implemented
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        503:
          description: Service Unavailable
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
      x-codegen-request-body-name: body
  /Consent/handle/{consentHandle}:
    get:
      tags:
      - Consent Flow
      description: |-
        This API is intended for checking the status of a previously submitted Consent Artefacts creation request.
        <br> Note: "Request Body Example Value" and "Responses Example Value" given below is for illustrative purposes only.
      parameters:
      - name: x-jws-signature
        in: header
        description: Detached JWS of the endpoint URI '/Consent/handle/{consentHandle}'
          with {consentHandle} substituted with value before generating the JWS.
        required: true
        schema:
          type: string
      - name: consentHandle
        in: path
        description: A handle provided to the AA client that is later used to obtain
          the consent once generated.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                required:
                - ConsentHandle
                - ConsentStatus
                - timestamp
                - txnid
                - ver
                type: object
                properties:
                  ver:
                    type: string
                    description: The version of the API
                    example: "1.0"
                    xml:
                      attribute: true
                  timestamp:
                    type: string
                    description: Creation timestamp of the message which will be updated
                      at each leg
                    format: date-time
                    example: 2018-12-06T11:39:57.153Z
                    xml:
                      attribute: true
                  txnid:
                    type: string
                    description: The unique transaction identifier used for providing
                      an end to end traceability of API calling.
                    example: 795038d3-86fb-4d3a-a681-2d39e8f4fc3c
                    xml:
                      attribute: true
                  ConsentHandle:
                    type: string
                    description: Generate the consent handle id on the request of
                      customer
                    example: 39e108fe-9243-11e8-b9f2-0256d88baae8
                  ConsentStatus:
                    $ref: '#/components/schemas/Consent'
        400:
          description: Bad Request
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestConsentStatus'
        401:
          description: Unauthorized Access
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccess'
        404:
          description: Not Found
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        409:
          description: Conflict
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        412:
          description: Precondition failed
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        500:
          description: Internal Server Error
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        501:
          description: Not Implemented
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        503:
          description: Service Unavailable
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
  /Consent/{id}:
    get:
      tags:
      - Consent Flow
      description: |-
        This API is intended for fetching the information associated with the specific consent.
        <br> Note: "Request Body Example Value" and "Responses Example Value" given below is for illustrative purposes only.
      parameters:
      - name: x-jws-signature
        in: header
        description: Detached JWS of the endpoint URI '/Consent/{id}' with {id} substituted
          with value before generating the JWS.
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The id of the Consent Artefact to retrieve
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentArtefact'
        400:
          description: Bad Request
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestConsentFetch'
        401:
          description: Unauthorized Access
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccess'
        404:
          description: Not Found
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        409:
          description: Conflict
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        412:
          description: Precondition failed
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        500:
          description: Internal Server Error
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        501:
          description: Not Implemented
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        503:
          description: Service Unavailable
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
      security:
      - FIP_api_key: []
      - Client_api_key: []
  /FI/request:
    post:
      tags:
      - Data Flow
      description: |-
        The FIU or the User submits the Consent IDs of the consents required for fetching financial information from the FIP(s). A set of sessionIds are generated and returned. These sessionIDs enable the FIU or the User to fetch the information from the AA once available.
        <br> Note: "Request Body Example Value" and "Responses Example Value" given below is for illustrative purposes only.
      parameters:
      - name: x-jws-signature
        in: header
        description: Detached JWS of the body
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FIRequest'
        required: true
      responses:
        200:
          description: OK
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FIResponse'
        400:
          description: Bad Request
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestFIRequest'
        401:
          description: Unauthorized Access
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccess'
        404:
          description: Not Found
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        409:
          description: Conflict
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        412:
          description: Precondition failed
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        500:
          description: Internal Server Error
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        501:
          description: Not Implemented
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        503:
          description: Service Unavailable
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
      x-codegen-request-body-name: body
  /FI/fetch/{sessionId}:
    get:
      tags:
      - Data Flow
      description: |-
        Once FIU receives the notification <Data-Ready> from AA, using digitally signed consent request received from AA, this API can be used to fetch the financial information from the AA.
        <br> Note: "Request Body Example Value" and "Responses Example Value" given below is for illustrative purposes only.
      parameters:
      - name: x-jws-signature
        in: header
        description: Detached JWS of the endpoint URI '/FI/fetch/{sessionId}' with
          {sessionId} substituted with value before generating the JWS.
        required: true
        schema:
          type: string
      - name: sessionId
        in: path
        description: Session ID for the FI Request Session
        required: true
        schema:
          type: string
      - name: fipId
        in: query
        description: FIP ID as defined in the Account Aggregator Ecosystem. Maximum
          1.
        schema:
          type: string
      - name: linkRefNumber
        in: query
        description: linkRefNumber/s for the accounts to be fetched from particular
          FIP. Supports more than 1.
        style: form
        explode: false
        schema:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        200:
          description: OK
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FIFetchResponse'
        400:
          description: Bad Request
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestFIFetch'
        401:
          description: Unauthorized Access
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccess'
        403:
          description: Forbidden
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenFIFetch'
        404:
          description: Not Found
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundFIFetch'
        409:
          description: Conflict
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        410:
          description: Data Gone
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataGoneFIFetch'
        412:
          description: Precondition failed
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        500:
          description: Internal Server Error
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        501:
          description: Not Implemented
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        503:
          description: Service Unavailable
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
  /Consent/Notification:
    post:
      tags:
      - Notifications
      description: |-
        API handles the notifications corresponding to the events generated during consent flow.
        <br> Note: "Request Body Example Value" and "Responses Example Value" given below is for illustrative purposes only.
      parameters:
      - name: x-jws-signature
        in: header
        description: Detached JWS of the body
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentStatusNotification'
        required: true
      responses:
        200:
          description: OK
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
        400:
          description: Bad Request
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestConsentNotification'
        401:
          description: Unauthorized Access
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccess'
        404:
          description: Not Found
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        409:
          description: Conflict
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        412:
          description: Precondition failed
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        500:
          description: Internal Server Error
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        501:
          description: Not Implemented
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        503:
          description: Service Unavailable
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
      security:
      - Client_api_key: []
      - FIP_api_key: []
      x-codegen-request-body-name: body
  /FI/Notification:
    post:
      tags:
      - Notifications
      description: |-
        API handles the notifications corresponding to the events generated during data-flow.
        <br> Note: "Request Body Example Value" and "Responses Example Value" given below is for illustrative purposes only.
      parameters:
      - name: x-jws-signature
        in: header
        description: Detached JWS of the body
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FIStatusNotification'
        required: true
      responses:
        200:
          description: OK
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
        400:
          description: Bad Request
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestFINotification'
        401:
          description: Unauthorized Access
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccess'
        404:
          description: Not Found
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        409:
          description: Conflict
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        412:
          description: Precondition failed
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        500:
          description: Internal Server Error
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        501:
          description: Not Implemented
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        503:
          description: Service Unavailable
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
      security:
      - Client_api_key: []
      - FIP_api_key: []
      x-codegen-request-body-name: body
  /Account/link/Notification:
    post:
      tags:
      - Notifications
      description: |-
        API handles the notifications corresponding to the events generated during account linkage flow.
        <br> Note: "Request Body Example Value" and "Responses Example Value" given below is for illustrative purposes only.
      parameters:
      - name: x-jws-signature
        in: header
        description: Detached JWS of the body
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountLinkStatusNotification'
        required: true
      responses:
        200:
          description: OK
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
        400:
          description: Bad Request
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        401:
          description: Unauthorized Access
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccess'
        404:
          description: Not Found
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        409:
          description: Conflict
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        412:
          description: Precondition failed
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        500:
          description: Internal Server Error
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        501:
          description: Not Implemented
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        503:
          description: Service Unavailable
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
      security:
      - Client_api_key: []
      - FIP_api_key: []
      x-codegen-request-body-name: body
  /Heartbeat:
    get:
      tags:
      - Monitoring
      description: |-
        This API is used by FIP and FIUs to check availability of AAs.

         <br> Note: "Request Body Example Value" and "Responses Example Value" given below is for illustrative purposes only.
      responses:
        200:
          description: OK
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeartbeatResponse'
        400:
          description: Bad Request
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        401:
          description: Unauthorized Access
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccess'
        404:
          description: Not Found
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        500:
          description: Internal Server Error
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        501:
          description: Not Implemented
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplemented'
        503:
          description: Service Unavailable
          headers:
            x-jws-signature:
              description: Detached JWS of the response body
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
components:
  schemas:
    ConsentsRequest:
      required:
      - ConsentDetail
      - timestamp
      - txnid
      - ver
      type: object
      properties:
        ver:
          type: string
          description: The version of the API
          example: "1.0"
          xml:
            attribute: true
        timestamp:
          type: string
          description: Creation timestamp of the message which will be updated at
            each leg
          format: date-time
          xml:
            attribute: true
        txnid:
          type: string
          description: The transaction identifier generated by the requester for providing
            an end to end traceability. The AA should use this transaction identifier
            in the responses and notifications for FIU to correlate response with
            the request. The transaction identifier will be a UUID generated string.
          example: 4a4adbbe-29ae-11e8-a8d7-0289437bf331
          xml:
            attribute: true
        ConsentDetail:
          required:
          - Customer
          - DataConsumer
          - DataLife
          - FIDataRange
          - Frequency
          - Purpose
          - consentExpiry
          - consentMode
          - consentStart
          - consentTypes
          - fetchType
          - fiTypes
          type: object
          properties:
            consentStart:
              type: string
              description: Start date-time of the consent. This field would allow
                for Post-Dated consent.
              format: date-time
              example: 2019-12-06T11:39:57.153Z
              xml:
                attribute: true
            consentExpiry:
              type: string
              description: Expiry date-time for the consent
              format: date-time
              example: 2019-12-06T11:39:57.153Z
              xml:
                attribute: true
            consentMode:
              type: string
              description: Consent Mode as defined in the AA Technical Specification
              xml:
                attribute: true
              enum:
              - VIEW
              - STORE
              - QUERY
              - STREAM
            fetchType:
              type: string
              description: FI Fetch type. Could be ONETIME or PERIODIC
              xml:
                attribute: true
              enum:
              - ONETIME
              - PERIODIC
            consentTypes:
              minItems: 1
              type: array
              xml:
                attribute: true
              items:
                type: string
                example: PROFILE
                enum:
                - PROFILE
                - SUMMARY
                - TRANSACTIONS
            fiTypes:
              $ref: '#/components/schemas/FITypes'
            DataConsumer:
              required:
              - id
              type: object
              properties:
                id:
                  type: string
                  description: The identifier of the FIU
                  example: fiu7465374537id
                  xml:
                    attribute: true
              description: Contains the FIU id
            Customer:
              required:
              - id
              type: object
              properties:
                id:
                  type: string
                  description: The identifier of the Customer can be generated during
                    the registration with AA
                  example: customer_identifier@AA_identifier
                  xml:
                    attribute: true
              description: Contains the customer address
            Purpose:
              $ref: '#/components/schemas/Purpose'
            FIDataRange:
              required:
              - from
              - to
              type: object
              properties:
                from:
                  type: string
                  description: Selects the starting date-time from where the financial
                    information is to be start. It is a mandatory field only if consentTypes
                    includes ENUM TRANSACTIONS in consent parameters.
                  format: date-time
                  example: 2018-12-06T11:39:57.153Z
                  xml:
                    attribute: true
                to:
                  type: string
                  description: Selects the ending date-time from where the financial
                    information is to be end. It is a mandatory field only if consentTypes
                    includes ENUM TRANSACTIONS in consent parameters.
                  format: date-time
                  example: 2019-12-06T11:39:57.153Z
                  xml:
                    attribute: true
              description: Specify the datetime range for querying the financial information
            DataLife:
              required:
              - unit
              - value
              type: object
              properties:
                unit:
                  type: string
                  description: A unit of how long consumer can store the data
                  xml:
                    attribute: true
                  enum:
                  - MONTH
                  - YEAR
                  - DAY
                  - INF
                value:
                  type: number
                  description: Define the value of unit of how long can consumer store
                    the data
                  xml:
                    attribute: true
              description: How long consumer is allowed to store data
            Frequency:
              required:
              - unit
              - value
              type: object
              properties:
                unit:
                  type: string
                  description: Defines the time unit of the frequency to access the
                    financial information.
                  example: HOUR
                  xml:
                    attribute: true
                  enum:
                  - HOUR
                  - DAY
                  - MONTH
                  - YEAR
                  - INF
                value:
                  type: number
                  description: Define the number of times FI data can be fetched within
                    the defined time unit.
                  example: 1.0
                  xml:
                    attribute: true
              description: Defines frequency of FI data fetch within the defined time
                unit. E.g.HOURLY,DAILY,MONTHLY,YEARLY.
            DataFilter:
              type: array
              description: rules that will be utilized by FIP to filter the data
              xml:
                name: DataFilter
              items:
                required:
                - operator
                - type
                - value
                type: object
                properties:
                  type:
                    type: string
                    description: The condition to filter the data on.
                    example: TRANSACTIONAMOUNT
                    xml:
                      attribute: true
                    enum:
                    - TRANSACTIONTYPE
                    - TRANSACTIONAMOUNT
                  operator:
                    type: string
                    description: Operator to filter data by.
                    example: '>='
                    xml:
                      attribute: true
                    enum:
                    - =
                    - '!='
                    - '>'
                    - <
                    - '>='
                    - <=
                  value:
                    type: string
                    description: Value to filter data
                    example: "20000"
                    xml:
                      attribute: true
          description: Specify the financial information types that customer wants
            to access
      description: This call generated via AA client.
      xml:
        name: Consent
    ConsentsResponse:
      required:
      - ConsentHandle
      - Customer
      - timestamp
      - txnid
      - ver
      type: object
      properties:
        ver:
          type: string
          description: Version of the API
          example: "1.0"
          xml:
            attribute: true
        timestamp:
          type: string
          description: Creation timestamp of the message which will be updated at
            each leg
          format: date-time
          example: 2018-12-06T11:39:57.153Z
          xml:
            attribute: true
        txnid:
          type: string
          description: The transaction identifier that was sent in the request is
            echoed back to the client for providing an end to end traceability.
          example: 4a4adbbe-29ae-11e8-a8d7-0289437bf331
          xml:
            attribute: true
        Customer:
          required:
          - id
          type: object
          properties:
            id:
              type: string
              description: The identifier of the Customer can be generated during
                the registration with AA
              example: customer_identifier@AA_identifier
              xml:
                attribute: true
          description: Contains the customer address
        ConsentHandle:
          type: string
          description: Generate the consent handle id on the request of customer
          example: 39e108fe-9243-11e8-b9f2-0256d88baae8
      description: This is a response to the RequestConsent API call
      xml:
        name: ConsentsResponse
        namespace: http://standards.rebit.org.in/aa
    FIRequest:
      required:
      - Consent
      - FIDataRange
      - KeyMaterial
      - timestamp
      - txnid
      - ver
      type: object
      properties:
        ver:
          type: string
          description: The version of the API
          example: "1.0"
          xml:
            attribute: true
        timestamp:
          type: string
          description: Creation timestamp of the message which will be updated at
            each leg
          format: date-time
          example: 2018-12-06T11:39:57.153Z
          xml:
            attribute: true
        txnid:
          type: string
          description: The unique transaction identifier used for providing an end
            to end traceability.
          example: e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb
          xml:
            attribute: true
        FIDataRange:
          required:
          - from
          - to
          type: object
          properties:
            from:
              type: string
              description: Selects the starting date-time from where the financial
                information is to be start
              format: date-time
              example: 2018-12-06T11:39:57.153Z
              xml:
                attribute: true
            to:
              type: string
              description: Selects the ending date-time from where the financial information
                is to be end
              format: date-time
              example: 2019-12-06T11:39:57.153Z
              xml:
                attribute: true
          description: Specify the datetime range for querying the financial information
        Consent:
          required:
          - digitalSignature
          - id
          type: object
          properties:
            id:
              type: string
              description: Contains consent id which is base-64 encoded unique string
              example: 654024c8-29c8-11e8-8868-0289437bf331
              xml:
                attribute: true
            digitalSignature:
              type: string
              description: Signature part of the Consent JWS. The reciever has to
                check the given signature matches with the signature in the original
                consent JWS.
              example: NdjwMjLortTb10dxcJezkvdOxPVvEdZvIqwqVWOHnE8pS_YDswcRPLTRmds2xO-Tvm_A2cFv1qKYpaZnv8Bl6xmZoOsG_F8_40gRZqIhz5hF9puzp8lEEhMlZ6NaX2Y2OYkwHcOBBpCIXpLXB4CMWiefUEWjO9zKDd5JJwZ4vLWeT4qgwvPfRqE60B33tzVlF5E6OA2mKK17sGRXsfrI9obEjL52RMdGo_9bv1HnHfvPlbj5ihj6d_5iTtoh7HUC_X8CrJGvkgkCjP_7of1jPb5QgJ9nx_Yfsxj3vf8zEseZIVISjF3MwBzW7Di4CpfQl4wlnpkQO9MKu78F69Z9Ig
        KeyMaterial:
          $ref: '#/components/schemas/KeyMaterial'
      xml:
        name: FIRequest
    FIResponse:
      required:
      - consentId
      - sessionId
      - timestamp
      - txnid
      - ver
      type: object
      properties:
        ver:
          type: string
          description: The version of the API
          example: "1.0"
          xml:
            attribute: true
        timestamp:
          type: string
          description: Creation timestamp of the message which will be updated at
            each leg
          format: date-time
          example: 2018-12-06T11:39:57.153Z
          xml:
            attribute: true
        txnid:
          type: string
          description: The unique transaction identifier used for providing an end
            to end traceability.
          example: e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb
          xml:
            attribute: true
        consentId:
          type: string
          description: Consent ID of the consent artefact for which the session has
            been created.
          example: 654024c8-29c8-11e8-8868-0289437bf331
          xml:
            attribute: true
        sessionId:
          type: string
          description: A session ID is a base-64 encoded UUID number that an AA assigns
            to a specific user for requesting the  financial information access. It
            is also used for logging and tracking an end-to-end  financial information
            sharing with customer
          example: caa2f259-2dc2-4075-87aa-6d81018b6183
          xml:
            attribute: true
    Error:
      type: object
      properties:
        code:
          type: integer
          description: Unique error response code
          xml:
            attribute: true
        msg:
          type: string
          description: Error Message
          xml:
            attribute: true
        detail:
          type: string
          description: Description of the specific error
          xml:
            attribute: true
      description: The error code is a unique string that identifies the error.
    Consent:
      type: object
      properties:
        id:
          type: string
          description: Consent ID of the generated consent
          example: 654024c8-29c8-11e8-8868-0289437bf331
          xml:
            attribute: true
        status:
          type: string
          description: Specifiy the status of consent artefact
          xml:
            attribute: true
          enum:
          - READY
          - FAILED
          - PENDING
      description: Contains the consent artefact related information
      xml:
        name: Consent
    ConsentArtefact:
      required:
      - ConsentUse
      - consentId
      - createTimestamp
      - signedConsent
      - status
      - txnid
      - ver
      type: object
      properties:
        ver:
          type: string
          description: Version of the AA Ecosystem API's
          example: "1.0"
          xml:
            attribute: true
        txnid:
          type: string
          description: 'The unique transaction identifier used for providing an end
            to end traceability. '
          example: 0b811819-9044-4856-b0ee-8c88035f8858
          xml:
            attribute: true
        consentId:
          type: string
          description: The unique ID of the consent artefact
          example: XXXX-XXXX-XXXX-XXXX
          xml:
            attribute: true
        status:
          type: string
          description: Current Status of the Consent
          enum:
          - ACTIVE
          - PAUSED
          - REVOKED
          - EXPIRED
        createTimestamp:
          type: string
          description: Creation time of the consent artefact
          format: date-time
          example: 2018-12-06T11:39:57.153Z
          xml:
            attribute: true
        signedConsent:
          type: string
          description: Consent artefact signed using JWS. See SignedConsentDetail
            model for consent format.
          example: eyJhbGciOiJSUzI1NiIsImtpZCI6IjQyNzE5MTNlLTdiOTMtNDlkZC05OTQ5LTFjNzZmZjVmYzVjZiIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19.ew0KICAgICAgICAiY29uc2VudFN0YXJ0IjogIjIwMTktMDUtMjhUMTE6Mzg6MjAuMzgwKzAwMDAiLA0KICAgICAgICAiY29uc2VudEV4cGlyeSI6ICIyMDIwLTA1LTI4VDExOjM4OjIwLjM4MSswMDAwIiwNCiAgICAgICAgImNvbnNlbnRNb2RlIjogIlZJRVciLA0KICAgICAgICAiZmV0Y2hUeXBlIjogIk9ORVRJTUUiLA0KICAgICAgICAiY29uc2VudFR5cGVzIjogWw0KICAgICAgICAgICAgIlBST0ZJTEUiLA0KICAgICAgICAgICAgIlNVTU1BUlkiLA0KICAgICAgICAgICAgIlRSQU5TQUNUSU9OUyINCiAgICAgICAgXSwNCiAgICAgICAgImZpVHlwZXMiOiBbDQogICAgICAgICAgICAiREVQT1NJVCIsDQogICAgICAgICAgICAiVEVSTS1ERVBPU0lUIg0KICAgICAgICBdLA0KICAgICAgICAiRGF0YUNvbnN1bWVyIjogew0KICAgICAgICAgICAgImlkIjogImNvb2tpZWphci1hYUBmaW52dS5pbiIsDQogICAgICAgICAgICAidHlwZSI6ICJBQSINCiAgICAgICAgfSwNCiAgICAgICAgIkRhdGFQcm92aWRlciI6IHsNCiAgICAgICAgICAgICJpZCI6ICJCQVJCMEtJTVhYWCIsDQogICAgICAgICAgICAidHlwZSI6ICJGSVAiDQogICAgICAgIH0sDQogICAgICAgICJDdXN0b21lciI6IHsNCiAgICAgICAgICAgICJpZCI6ICJkZW1vQGZpbnZ1Ig0KICAgICAgICB9LA0KICAgICAgICAiQWNjb3VudHMiOiBbDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgImZpVHlwZSI6ICJERVBPU0lUIiwNCiAgICAgICAgICAgICAgICAiZmlwSWQiOiAiQkFSQjBLSU1YWFgiLA0KICAgICAgICAgICAgICAgICJhY2NUeXBlIjogIlNBVklOR1MiLA0KICAgICAgICAgICAgICAgICJsaW5rUmVmTnVtYmVyIjogIlVCSTQ4NTk2NDU3OSIsDQogICAgICAgICAgICAgICAgIm1hc2tlZEFjY051bWJlciI6ICJVQkk4NTIxNzg4MTI3OSINCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgImZpVHlwZSI6ICJERVBPU0lUIiwNCiAgICAgICAgICAgICAgICAiZmlwSWQiOiAiQkFSQjBLSU1YWFgiLA0KICAgICAgICAgICAgICAgICJhY2NUeXBlIjogIlNBVklOR1MiLA0KICAgICAgICAgICAgICAgICJsaW5rUmVmTnVtYmVyIjogIlVCSTQ4NTk2NDUiLA0KICAgICAgICAgICAgICAgICJtYXNrZWRBY2NOdW1iZXIiOiAiVUJJODUyMTc4ODEyIg0KICAgICAgICAgICAgfQ0KICAgICAgICBdLA0KICAgICAgICAiUHVycG9zZSI6IHsNCiAgICAgICAgICAgICJjb2RlIjogIjEwMSIsDQogICAgICAgICAgICAicmVmVXJpIjogImh0dHBzOi8vYXBpLnJlYml0Lm9yZy5pbi9hYS9wdXJwb3NlLzEwMS54bWwiLA0KICAgICAgICAgICAgInRleHQiOiAiV2VhbHRoIG1hbmFnZW1lbnQgc2VydmljZSIsDQogICAgICAgICAgICAiQ2F0ZWdvcnkiOiB7DQogICAgICAgICAgICAgICAgInR5cGUiOiAicHVycG9zZUNhdGVnb3J5VHlwZSINCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgIkZJRGF0YVJhbmdlIjogew0KICAgICAgICAgICAgImZyb20iOiAiMjAxOS0wNS0yOFQxMTozODoyMC4zODMrMDAwMCIsDQogICAgICAgICAgICAidG8iOiAiMjAyMC0wNS0yOFQxMTozODoyMC4zODErMDAwMCINCiAgICAgICAgfSwNCiAgICAgICAgIkRhdGFMaWZlIjogew0KICAgICAgICAgICAgInVuaXQiOiAiTU9OVEgiLA0KICAgICAgICAgICAgInZhbHVlIjogNA0KICAgICAgICB9LA0KICAgICAgICAiRnJlcXVlbmN5Ijogew0KICAgICAgICAgICAgInVuaXQiOiAiSE9VUiIsDQogICAgICAgICAgICAidmFsdWUiOiA0DQogICAgICAgIH0sDQogICAgICAgICJEYXRhRmlsdGVyIjogWw0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICJ0eXBlIjogIlRSQU5TQUNUSU9OQU1PVU5UIiwNCiAgICAgICAgICAgICAgICAib3BlcmF0b3IiOiAiPiIsDQogICAgICAgICAgICAgICAgInZhbHVlIjogIjIwMDAwIg0KICAgICAgICAgICAgfQ0KICAgICAgICBdDQogICAgfQ.O3KPh-eTpW2w47QXYidOBe1Hk2y7djVAEcOnZyRRvxQ3cY18-9ZWiodF16jff-e7yNQgsYZpAy95Fx2Fft8LoYugkYh9_6qHiG_7LCtW8Ng4nCMgZM3Wwsj11ks1msrK5C1ksPrGlTkFhm9-FufNkPTAlW76_5Sb8G_lOsIj1lB8TrvKpOvPlhEIgsS4WBNdPfv3SBqTV2suw2LvkX3QTilqwuMgXMkrm9-RYL90fweX_yyoyaBWHOJNQaKNuQWPpoRRNHGOx3v4_QiwgrELdfeTVtKn6R_AsfaBoEthQ3wrc8tY1q0Wx5j0x18NdU2R2C26dHyZ9M11dEH99psA1A
        ConsentUse:
          required:
          - count
          - lastUseDateTime
          - logUri
          type: object
          properties:
            logUri:
              type: string
              description: Logging; logUri can be any valid URI including an email
                address
              xml:
                attribute: true
            count:
              type: number
              description: Number of times the consent has been used
              example: 1.0
              xml:
                attribute: true
            lastUseDateTime:
              type: string
              description: Consent Last Used Datetime
              format: date-time
              example: 2018-12-06T11:39:57.153Z
              xml:
                attribute: true
          description: Section defining the parameters for consent tracking
      xml:
        name: ConsentArtefact
        namespace: http://standards.rebit.org.in/aa
    KeyMaterial:
      required:
      - Nonce
      - cryptoAlg
      type: object
      properties:
        cryptoAlg:
          type: string
          description: The encryption algorithms supported by this service. Currently
            ECDH is a crypto algorithm that is supported.
          example: ECDH
          xml:
            attribute: true
        curve:
          type: string
          description: Describes a secure elliptic curve standard that is used to
            perform ECDH. Currently Curve25519 is supported
          example: Curve25519
          xml:
            attribute: true
        params:
          type: string
          description: Specifies the secure standard cryptographic primitives to perform
            end to end encryption. Use Key-Value pair separated by a semicolon. The
            value given for cryptographic primitives in example should be used for
            symmetric encryption(AES-256 bits, GCM-128 bits and No Padding) and key
            exchange protocol(ECDH).
          example: cipher=AES/GCM/NoPadding;KeyPairGenerator=ECDH
          xml:
            attribute: true
        DHPublicKey:
          required:
          - expiry
          type: object
          properties:
            expiry:
              type: string
              description: Specify an expiry date of the public key.
              format: date-time
              example: 2018-12-06T11:39:57.153Z
              xml:
                attribute: true
            Parameters:
              type: string
              description: 'Defines the public paramters used to calculate session
                (data encryption) key. For exapmle: Ephemeral public key'
            KeyValue:
              type: string
              description: Contains the value of emphemeral public key
          description: 'Contains the public information for performing the key exchange.
            example: Ecliptic Curve Diffie–Hellman key exchange (ECDH)'
        Nonce:
          type: string
          description: 'Nonce is a random string generated every time during  the
            publishing of Ephemeral public key to ensure that  old communications
            cannot be reused in replay attacks. Nonce should have a fixed length.
            Unlike random numbers,  random strings do not require byte ordering.  Hence
            session keys can be generated in a platform  independent way. Ref: https://tools.ietf.org/html/rfc5116.'
          example: 29512b70-ca84-46b5-9471-63765599cf15
      description: 'Contains the cryptographic parameters that are required to perform
        End-to-End encryption for sharing the financial information between the producer
        and the consumer in a secure manner. Please refer this link for more information:
        https://tools.ietf.org/html/rfc4492 '
      xml:
        name: KeyMaterial
    SignedConsentDetail:
      required:
      - Accounts
      - Customer
      - DataConsumer
      - DataLife
      - DataProvider
      - FIDataRange
      - Frequency
      - Purpose
      - consentExpiry
      - consentMode
      - consentStart
      - consentTypes
      - fetchType
      - fiTypes
      type: object
      properties:
        consentStart:
          type: string
          description: Start date-time of the consent. This field would allow for
            Post-Dated consent.
          format: date-time
          example: 2019-12-06T11:39:57.153Z
          xml:
            attribute: true
        consentExpiry:
          type: string
          description: Expiry date-time for the consent
          format: date-time
          example: 2019-12-06T11:39:57.153Z
          xml:
            attribute: true
        consentMode:
          type: string
          description: Consent Mode as defined in the AA Technical Specification
          xml:
            attribute: true
          enum:
          - VIEW
          - STORE
          - QUERY
          - STREAM
        fetchType:
          type: string
          description: FI Fetch type. Could be ONETIME or PERIODIC
          xml:
            attribute: true
          enum:
          - ONETIME
          - PERIODIC
        consentTypes:
          minItems: 1
          type: array
          items:
            type: string
            example: PROFILE
            enum:
            - PROFILE
            - SUMMARY
            - TRANSACTIONS
        fiTypes:
          $ref: '#/components/schemas/FITypes'
        DataConsumer:
          type: object
          properties:
            id:
              type: string
              description: DataConsumer ID
              example: DC1
              xml:
                attribute: true
            type:
              type: string
              description: Type of DataConsumer
              example: AA
              enum:
              - FIU
              - AA
          description: Dataconsumer ID. For a consent between FIP & AA, Dataconsumer
            would be AA whereas for a consent between FIU/AA Application & AA, Dataconsumer
            would be FIU/AA Application.
        DataProvider:
          type: object
          properties:
            id:
              type: string
              description: DataProvider ID
              example: DP1
              xml:
                attribute: true
            type:
              type: string
              description: Type of DataConsumer
              example: FIP
              enum:
              - FIP
              - AA
          description: DataProvider ID. For a consent between FIP & AA, DataProvider
            would be FIP whereas for a consent between FIU/AA Application & AA, DataProvider
            would be AA.
        Customer:
          type: object
          properties:
            id:
              type: string
              description: Customer Address
              example: customer_identifier@AA_identifier
              xml:
                attribute: true
          description: Address of the end customer
        Accounts:
          type: array
          description: List of accounts which the consent would fetch FI from. For
            a consent between FIU & AA, this list could have accounts from multiple
            FIP. For a consent between FIP & AA, only accounts from particular FIP
            must be present in this section.
          xml:
            name: Accounts
          items:
            type: object
            properties:
              fiType:
                type: string
                description: Type of Financial Information
                example: DEPOSIT
                xml:
                  attribute: true
              fipId:
                type: string
                description: FIP ID
                example: FIP1
                xml:
                  attribute: true
              accType:
                type: string
                description: Type of Account
                example: SAVINGS
                xml:
                  attribute: true
              linkRefNumber:
                type: string
                description: FIP's linkRefNumber as shared by the FIP after linking
                example: XXXX-XXXX-XXXX
                xml:
                  attribute: true
              maskedAccNumber:
                type: string
                description: Masked account number
                example: XXXXXXXX4020
                xml:
                  attribute: true
        Purpose:
          $ref: '#/components/schemas/Purpose'
        FIDataRange:
          required:
          - from
          - to
          type: object
          properties:
            from:
              type: string
              description: Start date for financial information
              format: date-time
              example: 2017-07-13T11:33:34.509Z
              xml:
                attribute: true
            to:
              type: string
              description: End date for financial information
              format: date-time
              example: 2018-07-13T11:33:34.509Z
              xml:
                attribute: true
          description: Data Range (Datetime) for the Financial Information Requested
        DataLife:
          required:
          - unit
          - value
          type: object
          properties:
            unit:
              type: string
              description: A unit of how long consumer can store the data.
              xml:
                attribute: true
              enum:
              - DAY
              - MONTH
              - YEAR
              - INF
            value:
              type: number
              description: Value for the Datalife Unit. If INF, value must be set
                to 0.
              xml:
                attribute: true
          description: Datalife defines for how long can the FIU/AA Application store
            the data
        Frequency:
          required:
          - unit
          - value
          type: object
          properties:
            unit:
              type: string
              description: Defines the time unit of the frequency to access the financial
                information.
              example: HOUR
              xml:
                attribute: true
              enum:
              - HOUR
              - DAY
              - MONTH
              - YEAR
            value:
              type: number
              description: Define the number of times FI data can be fetched within
                the defined time unit.
              example: 1.0
              xml:
                attribute: true
          description: Defines frequency of FI data fetch within the defined time
            unit. E.g.HOURLY,DAILY,MONTHLY,YEARLY.
          xml:
            name: Frequency
        DataFilter:
          type: array
          description: rules that will be utilized by FIP to filter the data
          xml:
            name: DataFilter
          items:
            required:
            - operator
            - type
            - value
            type: object
            properties:
              type:
                type: string
                description: The condition to filter the data on.
                example: TRANSACTIONAMOUNT
                xml:
                  attribute: true
                enum:
                - TRANSACTIONTYPE
                - TRANSACTIONAMOUNT
              operator:
                type: string
                description: Operator to filter data by.
                example: '>='
                xml:
                  attribute: true
                enum:
                - =
                - '!='
                - '>'
                - <
                - '>='
                - <=
              value:
                type: string
                description: Value to filter data
                example: "20000"
                xml:
                  attribute: true
      description: This Section defines the consent and should be digitally signed
        using the Json Web Signature method. CAN NOT CHANGE after generation, for
        any change a new consent has to be generated.
    ConsentStatusNotification:
      required:
      - ConsentStatusNotification
      - Notifier
      - timestamp
      - txnid
      - ver
      type: object
      properties:
        ver:
          type: string
          description: The version of the API
          example: "1.0"
          xml:
            attribute: true
        timestamp:
          type: string
          description: Creation timestamp of the message which will be updated at
            each leg
          format: date-time
          example: 2018-12-06T11:39:57.153Z
          xml:
            attribute: true
        txnid:
          type: string
          description: 'The unique transaction identifier used for providing an end
            to end traceability. '
          example: 0b811819-9044-4856-b0ee-8c88035f8858
          xml:
            attribute: true
        Notifier:
          required:
          - id
          - type
          type: object
          properties:
            type:
              type: string
              description: ""
              example: FIP
              xml:
                attribute: true
            id:
              type: string
              description: Value of the destination address for locating the resource
                to maintain the logs
              example: FIP-1
              xml:
                attribute: true
          description: Information about the notifier
        ConsentStatusNotification:
          required:
          - consentId
          - consentStatus
          type: object
          properties:
            consentId:
              type: string
              example: XXXX0-XXXX-XXXX
              xml:
                attribute: true
            consentStatus:
              type: string
              example: REJECTED
              xml:
                attribute: true
              enum:
              - ACTIVE
              - REVOKED
              - PAUSED
              - REJECTED
          description: Selects a type of  Data-flow events , Consent-flow events,
            and Account discovery flow events
          xml:
            name: ConsentStatusNotification
      description: ""
    FIStatusNotification:
      required:
      - FIStatusNotification
      - Notifier
      - timestamp
      - txnid
      - ver
      type: object
      properties:
        ver:
          type: string
          description: The version of the API
          example: "1.0"
          xml:
            attribute: true
        timestamp:
          type: string
          description: Creation timestamp of the message which will be updated at
            each leg
          format: date-time
          example: 2018-12-06T11:39:57.153Z
          xml:
            attribute: true
        txnid:
          type: string
          description: 'The unique transaction identifier used for providing an end
            to end traceability. '
          example: 0b811819-9044-4856-b0ee-8c88035f8858
          xml:
            attribute: true
        Notifier:
          required:
          - id
          - type
          type: object
          properties:
            type:
              type: string
              description: ""
              example: FIP
              xml:
                attribute: true
            id:
              type: string
              description: Value of the destination address for locating the resource
                to maintain the logs
              example: FIP-1
              xml:
                attribute: true
          description: Information about the notifier
        FIStatusNotification:
          required:
          - FIStatusResponse
          - sessionId
          - sessionStatus
          type: object
          properties:
            sessionId:
              type: string
              example: XXXX0-XXXX-XXXX
              xml:
                attribute: true
            sessionStatus:
              type: string
              example: ACTIVE
              enum:
              - ACTIVE
              - COMPLETED
              - EXPIRED
              - FAILED
            FIStatusResponse:
              type: array
              items:
                required:
                - Accounts
                - fipID
                type: object
                properties:
                  fipID:
                    type: string
                    example: FIP-1
                  Accounts:
                    type: array
                    items:
                      required:
                      - FIStatus
                      - description
                      - linkRefNumber
                      type: object
                      properties:
                        linkRefNumber:
                          type: string
                          example: XXXX-XXXX-XXXX
                        FIStatus:
                          type: string
                          example: READY
                          xml:
                            attribute: true
                          enum:
                          - READY
                          - DENIED
                          - PENDING
                          - DELIVERED
                          - TIMEOUT
                        description:
                          type: string
                          example: ""
          description: Selects a type of  Data-flow events , Consent-flow events,
            and Account discovery flow events
      description: ""
    AccountLinkStatusNotification:
      required:
      - AccountLinkStatusNotification
      - Notifier
      - timestamp
      - txnid
      - ver
      type: object
      properties:
        ver:
          type: string
          description: The version of the API
          example: "1.0"
          xml:
            attribute: true
        timestamp:
          type: string
          description: Creation timestamp of the message which will be updated at
            each leg
          format: date-time
          example: 2018-12-06T11:39:57.153Z
          xml:
            attribute: true
        txnid:
          type: string
          description: 'The unique transaction identifier used for providing an end
            to end traceability. '
          example: 0b811819-9044-4856-b0ee-8c88035f8858
          xml:
            attribute: true
        Notifier:
          required:
          - id
          - type
          type: object
          properties:
            type:
              type: string
              description: ""
              example: FIP
              xml:
                attribute: true
            id:
              type: string
              description: Value of the destination address for locating the resource
                to maintain the logs
              example: FIP-1
              xml:
                attribute: true
          description: Information about the notifier
        AccountLinkStatusNotification:
          required:
          - accRefNumber
          - customerAddress
          - linkRefNumber
          - linkStatus
          type: object
          properties:
            accRefNumber:
              type: string
              example: XXXX0-XXXX-XXXX
              xml:
                attribute: true
            customerAddress:
              type: string
              example: customer_identifier@aa_identifier
            linkRefNumber:
              type: string
              example: XXXX-XXXX-XXXX
            linkStatus:
              type: string
              example: LINKED
              xml:
                attribute: true
              enum:
              - LINKED
          description: Selects a type of  Data-flow events , Consent-flow events,
            and Account discovery flow events
          xml:
            name: AccountLinkStatusNotification
      description: ""
    Purpose:
      required:
      - code
      type: object
      properties:
        code:
          type: string
          description: 'Purpose Code as defined in the AA Technical Specification '
          example: "101"
          xml:
            attribute: true
        refUri:
          type: string
          description: URL where the purpose is further defined
          example: https://api.rebit.org.in/aa/purpose/101.xml
          xml:
            attribute: true
        text:
          type: string
          description: Textual Description
          example: Wealth management service
          xml:
            attribute: true
        Category:
          type: object
          properties:
            type:
              type: string
              description: Category name of the Purpose code
              xml:
                attribute: true
      description: Purpose of the consent defined in the AA Technical Specification
    FITypes:
      minItems: 1
      type: array
      items:
        type: string
        description: List of financial information types.
        example: DEPOSIT
        enum:
        - DEPOSIT
        - TERM_DEPOSIT
        - RECURRING_DEPOSIT
        - SIP
        - CP
        - GOVT_SECURITIES
        - EQUITIES
        - BONDS
        - DEBENTURES
        - MUTUAL_FUNDS
        - ETF
        - IDR
        - CIS
        - AIF
        - INSURANCE_POLICIES
        - NPS
        - INVIT
        - REIT
        - OTHER
    HeartbeatResponse:
      required:
      - Status
      - timestamp
      - ver
      type: object
      properties:
        ver:
          type: string
          description: The version of the API
          example: "1.0"
          xml:
            attribute: true
        timestamp:
          type: string
          description: Creation timestamp of the message which will be updated at
            each leg
          format: date-time
          example: 2018-12-06T11:39:57.153Z
          xml:
            attribute: true
        Status:
          type: string
          description: 'Status of the AA Server '
          enum:
          - UP
          - DOWN
        Error:
          $ref: '#/components/schemas/Error'
      xml:
        name: HeartbeatResponse
        namespace: https://standards.rebit.org.in/aa
    FIFetchResponse:
      required:
      - FI
      - timestamp
      - txnid
      - ver
      type: object
      properties:
        ver:
          type: string
          description: The version of the API
          example: "1.0"
          xml:
            attribute: true
        timestamp:
          type: string
          description: Creation timestamp of the message which will be updated at
            each leg
          format: date-time
          example: 2018-12-06T11:39:57.153Z
          xml:
            attribute: true
        txnid:
          type: string
          description: The unique transaction identifier used for providing an end
            to end traceability.
          example: 3dd436f8-0747-4a8f-9001-375e419430be
          xml:
            attribute: true
        FI:
          type: array
          description: Contains the account-specific metadata with corresponding encrypted
            data for accessing the finanical information
          items:
            required:
            - KeyMaterial
            - data
            - fipID
            type: object
            properties:
              fipID:
                type: string
                example: FIP-1
              data:
                type: array
                items:
                  required:
                  - encryptedFI
                  - linkRefNumber
                  - maskedAccNumber
                  type: object
                  properties:
                    linkRefNumber:
                      type: string
                      example: XXXX-XXXX-XXXX
                    maskedAccNumber:
                      type: string
                      example: XXXXXXXX4020
                    encryptedFI:
                      type: string
                      description: Contains the encrypted financial information based
                        on the key material defined corresponding to the user's Account
              KeyMaterial:
                $ref: '#/components/schemas/KeyMaterial'
      xml:
        name: FIFetchResponse
        namespace: https://standards.rebit.org.in/aa
    ErrorResponse:
      required:
      - errorCode
      - errorMsg
      - timestamp
      - txnid
      - ver
      type: object
      properties:
        ver:
          type: string
          description: API version.
          example: "1.0"
          xml:
            attribute: true
        txnid:
          type: string
          description: Trnsaction id of the request. Must be same value as sent in
            the request
          example: 0b811819-9044-4856-b0ee-8c88035f8858'
          xml:
            attribute: true
        timestamp:
          type: string
          description: Response timestamp
          format: date-time
          example: 2017-07-13T11:33:34.509Z
          xml:
            attribute: true
        errorCode:
          type: string
          description: Error code indicating the problem with the request
          xml:
            attribute: true
        errorMsg:
          type: string
          description: Error message with additional details. Ensure no sensitive
            information is included in the error message.
          example: Error code specific error message
      description: Generic Error Response. Specific Error Responses extend from this.
    BadRequest:
      description: Response to bad request.
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: Requested resource was not found.
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
    Conflict:
      description: IdempotencyError When UUID/Id is not unique
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
    PreconditionFailed:
      description: At least one of the preconditions you specified did not hold
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
    InternalServerError:
      description: Encountered an internal error. Please try again
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
    NotImplemented:
      description: Trying to access an unimplemented feature/API. Required when we
        provide backward compatiable API.
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
    ServiceUnavailable:
      description: Service is unavailable
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
    BadRequestConsent:
      description: Bad Request during Consent Request
      allOf:
      - $ref: '#/components/schemas/BadRequest'
    BadRequestConsentStatus:
      description: Bad Request during Consent Request Status
      allOf:
      - $ref: '#/components/schemas/BadRequest'
    BadRequestConsentFetch:
      description: Bad Request during Consent Fetch
      allOf:
      - $ref: '#/components/schemas/BadRequest'
    BadRequestFIRequest:
      description: Bad Request during FIRequest
      allOf:
      - $ref: '#/components/schemas/BadRequest'
    BadRequestFIFetch:
      description: Bad Request during FI Fetch
      allOf:
      - $ref: '#/components/schemas/BadRequest'
    ForbiddenFIFetch:
      type: object
      properties:
        ver:
          type: string
          description: API version.
          example: "1.0"
          xml:
            attribute: true
        txnid:
          type: string
          description: Trnsaction id of the request. Must be same value as sent in
            the request
          example: 0b811819-9044-4856-b0ee-8c88035f8858'
          xml:
            attribute: true
        timestamp:
          type: string
          description: Response timestamp
          format: date-time
          example: 2017-07-13T11:33:34.509Z
          xml:
            attribute: true
        errorCode:
          type: string
          xml:
            attribute: true
          enum:
          - DataFetchRequestInProgress
          - ConsentExpired
          - ConsentRevoked
          - ConsentPaused
        errorMsg:
          type: string
          example: Error code specific error message
      description: Forbidden Request during FI Fetch
    NotFoundFIFetch:
      description: Not found error during FI Fetch
      allOf:
      - $ref: '#/components/schemas/NotFound'
    DataGoneFIFetch:
      description: Data no longer availble during FI Fetch
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
    NotificationResponse:
      required:
      - response
      - timestamp
      - txnid
      - ver
      type: object
      properties:
        ver:
          type: string
          description: The version of the API
          example: "1.0"
          xml:
            attribute: true
        timestamp:
          type: string
          description: Creation timestamp of the message which will be updated at
            each call
          format: date-time
          xml:
            attribute: true
        txnid:
          type: string
          description: An unique transaction identifier used for providing an end
            to end traceability.
          example: f35761ac-4a18-11e8-96ff-0277a9fbfedc
          xml:
            attribute: true
        response:
          type: string
          description: response description
          example: OK
      description: Success response for receiving notification
      xml:
        name: ConsentNotificationResponse
        namespace: https://standards.rebit.org.in/aa
    BadRequestConsentNotification:
      description: Bad Request during Consent Notification
      allOf:
      - $ref: '#/components/schemas/BadRequest'
    BadRequestFINotification:
      description: Bad Request during Consent Notification
      allOf:
      - $ref: '#/components/schemas/BadRequest'
    UnauthorizedAccess:
      description: Unauthorized Access
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
  securitySchemes:
    Client_api_key:
      type: apiKey
      name: client_api_key
      in: header
    FIP_api_key:
      type: apiKey
      name: fip_api_key
      in: header
